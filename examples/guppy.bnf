# Grammar for guppylang: https://github.com/CQCL/guppylang

DECORATOR = "@guppy";

QUBIT_TYPE_ANNOT = "qubit";

TAB = "\t";

imports = "from guppylang.decorator import guppy" NEWLINE
        "from guppylang.std.angles import angle, pi" NEWLINE
        "from guppylang.std.builtins import array, owned, py" NEWLINE
        "from guppylang.std.option import Option, nothing, some" NEWLINE
        "from guppylang.std.quantum import (" NEWLINE
            "cz," NEWLINE
            "discard," NEWLINE
            "h," NEWLINE
            "measure," NEWLINE
            "qubit," NEWLINE
            "ry," NEWLINE
            "rz," NEWLINE
        ")" NEWLINE;

program = imports NEWLINE subroutines NEWLINE circuit NEWLINE compiler_call;

subroutines = (circuit NEWLINE)*;

circuit     = circuit_def NEWLINE qubit_defs NEWLINE body NEWLINE;

body = (statement NEWLINE)+;

circuit_def = DECORATOR NEWLINE "def " circuit_name "(" args "):";

args = qubit_defs;

qubit_defs = (qubit_def COMMA)+;

qubit_def = qubit_name " : " QUBIT_TYPE_ANNOT;

qubit = qubit_name "[" qubit_index "]" | qubit_name;

