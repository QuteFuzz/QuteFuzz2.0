# trying to fix up a pytket grammar that could be used

(*
    tokens like NEWLINE and RPAREN are defined in the tokens.bnf file
*)

program = imports NEWLINE subroutines NEWLINE circuit NEWLINE compiler_call;

imports = "from sympy import Symbol" NEWLINE
        "from diff_testing.lib import pytketTesting" NEWLINE
        "from pathlib import Path" NEWLINE
        "from pytket import Circuit, Qubit, Bit" NEWLINE
        "from pytket.circuit import Op, OpType, MultiplexorBox, CircBox" NEWLINE;

subroutines = (circuit circuit_name " = CircBox(" circuit_name ")" NEWLINE)*;

compiler_call = main_circuit_name ".measure_all() " NEWLINE
                "pt = pytketTesting() " NEWLINE
                "pt.run_circ(" main_circuit_name ", " circuit_id ")" NEWLINE;

circuit     = circuit_def NEWLINE qreg_defs NEWLINE body NEWLINE;

circuit_def = circuit_name " = Circuit()";

qreg_defs = (qreg_def NEWLINE)+;

body = (statement NEWLINE)+;

qreg_def    = qreg_name EQUALS circuit_name ".add_q_register" LPAREN '"' qreg_name '",' qreg_size RPAREN;

statement   = gate_application;

gate_application = 
    circuit_name DOT gate_name gate_application_kind
    | circuit_name ".add_gate(" subroutine ",[" qubit_list "])"  
    ;

gate_name   = X | Y | Z | H | CX | CCX | Rz | Rx | Ry | U1 | U2 | U3;

gate_application_kind = 
    LPAREN qubit_list RPAREN 
    | LPAREN float_literals COMMA qubit_list RPAREN
    ;

qubit_list  = qubit (COMMA SPACE qubit)*;

float_literals = float_literal | float_literal COMMA float_literal | float_literal COMMA float_literal COMMA float_literal;

qubit = qubit_name "[" qubit_index "]" | qubit_name;

